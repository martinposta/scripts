//---------------------------------------------------------------------------
// cr_buildWorld.mel - MEL Script
//---------------------------------------------------------------------------
//Copyright (c) 2010 Wasim Khan creaturerigs.com 
//
//Permission is hereby granted, free of charge, to any person obtaining a copy of
//this software and associated documentation files (the "Software"), to deal in
//the Software without restriction, including without limitation the rights to
//use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
//the Software, and to permit persons to whom the Software is furnished to do so,
//subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
//FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
//COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
//IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
//CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// DESCRIPTION: 
//      build world setup
//
// REQUIRES:
//      Nothing
//
// AUTHOR:
//      Wasim Khan - wasim.cg@gmail.com
//----------------------------------------------------------------------------

global proc string[] cr_buildWorld(string $name , float $scale)
{
string $worldAControl[] = {($name + "worldA_ctrl")};
string $worldBControl[] = {($name + "worldB_ctrl")};
string $controlGrp[];
string $rigGrp[];

if (!`objExists $worldAControl[0]`)
	$worldAControl = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 7 -d 1 -ut 0 -tol 0.001 -s 8 -ch 0 -n ($name + "worldA_ctrl")`;
	cr_resizeCurves {} 1 1 1 $scale;

if (`objExists $worldBControl[0]`)
  $controlGrp = {($name + "controls_grp"),($name + "skeletons_grp")};
else
	{
  $worldBControl = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 5.5 -d 1 -ut 0 -tol 0.001 -s 8 -ch 0 -n ($name + "worldB_ctrl")`;
	cr_resizeCurves {} 1 1 1 $scale;
  parent $worldBControl[0] $worldAControl[0];
  $rigGrp[0] = `group -em -n ($name + "rig")`;
  cr_lockAndHide $rigGrp[0] cr_locknHide "trans rot scale";

  parent $worldAControl[0] $rigGrp[0];

  $controlGrp[0] = `group -em -n ($name + "controls_grp")`;
  cr_lockAndHide $controlGrp[0] cr_locknHide "trans rot scale";
  $controlGrp[1] = `group -em -n ($name + "skeletons_grp")`;
  setAttr ($controlGrp[1]+".overrideEnabled") 1;
  setAttr ($controlGrp[1]+".overrideDisplayType") 2;
  cr_lockAndHide $controlGrp[1] cr_locknHide "trans rot scale";
  parent $controlGrp[0] $controlGrp[1] $worldBControl[0];
  string $scaleNode = cr_createScaleGrp($name);
  scaleConstraint -offset 1 1 1 -weight 1 $worldBControl $scaleNode;
  }
return $controlGrp;
}

global proc string cr_createNonScaleGrp(string $name)
{
string $nonScaleGrp = ($name+"non_scale_grp");
if (!`objExists $nonScaleGrp`)
  {
  $nonScaleGrp = `group -em -n ($name+"non_scale_grp")`;
  if (`objExists ($name+"rig")`)
    parent $nonScaleGrp ($name+"rig");
  }
return $nonScaleGrp;
}

global proc string cr_createScaleGrp(string $name)
{
string $scaleNode = ($name+"worldScaleCon_grp");
string $nonScaleGrp = cr_createNonScaleGrp($name);
if (!`objExists $scaleNode`)
	{
	group -em -n ($name+"worldScaleCon_grp");
	parent $scaleNode $nonScaleGrp;
	}
return $scaleNode;
}